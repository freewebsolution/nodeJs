{"version":3,"sources":["components/Note.js","services/note.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Note","nota","toggleImportance","deleteNote","day","moment","giorno","format","className","style","borderBottom","textTransform","tema","color","ora","onClick","important","marginLeft","baseUrl","exportedObject","getAll","axios","get","create","newObj","post","update","id","put","elimina","delete","Notification","message","backgroundColor","fontSize","borderStyle","borderRadius","padding","marginBottom","App","props","useState","note","setNote","newNote","setNewNote","newDay","setNewDay","newOur","setNewOur","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","then","res","data","sort","a","b","noteToShow","filter","map","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","window","confirm","onSubmit","e","preventDefault","noteObj","Date","toISOString","Math","random","concat","type","name","onChange","target","value","required","htmlFor","marginTop","marginRight","autoComplete","selected","date","dateFormat","minDate","toDate","placeholderText","TextField","label","InputLabelProps","shrink","inputProps","step","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2379fe51.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport React from 'react';\r\n\r\nconst Note = ({ nota, toggleImportance, deleteNote }) => {\r\n    const day = moment(nota.giorno).format('DD/MM/yyyy')\r\n    //const label = nota.important ? 'Definisci  non importante' : 'Definisci importante'\r\n    return (\r\n        <li className='collection-item' style={{ borderBottom: '1px solid #dadada' }}>\r\n            <span className='title'><span style={{ textTransform: 'capitalize' }}>{nota.tema}</span> il giorno <span style={{ color: 'red' }}>{day}</span> alle ore <span style={{ color: 'orange' }}>{nota.ora}</span> </span>\r\n            <span className=\"secondary-content\">\r\n                <button className='waves-effect waves-light btn-small ' onClick={toggleImportance}>{nota.important ? 'not important' : <i className=\"material-icons\">grade</i>}</button>\r\n                <button onClick={deleteNote} style={{ marginLeft: '5px' }} className='btn-floating btn-small waves-effect waves-light red'> <i className=\"material-icons\">delete</i></button>\r\n            </span>\r\n\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Note;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\n//ricezione dati metodo GET\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\n//invio dati POST\r\nconst create = newObj => {\r\n    return axios.post(baseUrl, newObj)\r\n}\r\n\r\n//modifica dati PUT \r\nconst update = (id, newObj) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObj)\r\n}\r\n//elimina dati DELETE\r\nconst elimina = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst exportedObject = {\r\n    getAll,\r\n    create,\r\n    update,\r\n    elimina\r\n};\r\n\r\nexport default exportedObject;","import React from 'react';\r\nimport './css/notification.css'\r\nconst Notification = ({ message }) => {\r\n    const notificationStyle = {\r\n        color: 'red',\r\n        backgroundColor: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div style={notificationStyle}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Note from './components/Note';\r\nimport noteService from './services/note'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport moment from 'moment'\r\nimport Notification from './components/Notification';\r\nconst App = (props) => {\r\n  const [note, setNote] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [newDay, setNewDay] = useState('')\r\n  const [newOur, setNewOur] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('null')\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(res => {\r\n        setNote(res.data.sort((a, b) => b.giorno > a.giorno ? -1 : 1))\r\n\r\n      })\r\n  }, [])\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault()\r\n    const noteObj = {\r\n      tema: newNote,\r\n      giorno: newDay,\r\n      ora: newOur,\r\n      data: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n    noteService\r\n      .create(noteObj)\r\n      .then(res => {\r\n        setNote(note.concat(res.data).sort((a, b) => new Date(a.giorno) - new Date(b.giorno)))\r\n        setNewNote('')\r\n        setNewDay('')\r\n        setNewOur('')\r\n      })\r\n  }\r\n  const toggleImportanceOf = id => {\r\n    const nota = note.find(n => n.id === id)\r\n    const changedNote = { ...nota, important: !nota.important }\r\n    noteService\r\n      .update(id, changedNote).then(res => {\r\n        setNote(note.map(nota => nota.id !== id ? nota : res.data))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Nota '${nota.tema}' Ã¨ stata rimossa dal server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNote(note.filter(n => n.id !== id))\r\n      })\r\n  }\r\n  const deleteNoteOf = (id, tema) => {\r\n    const r = window.confirm(`Sicuro di voler cancellare la nota  ${tema} ?`)\r\n    if (r === false) {\r\n      return\r\n    } else {\r\n      note.filter(n => n.id === id)\r\n      noteService\r\n        .elimina(id)\r\n        .then(() => {\r\n          setNote(note.filter(nota => nota.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNoteChange = (e) => {\r\n    setNewNote(e.target.value)\r\n\r\n  }\r\n  const handleDayChange = (date) => {\r\n    setNewDay(date)\r\n\r\n  }\r\n\r\n  const handleOurChange = (e) => {\r\n    setNewOur(e.target.value)\r\n  }\r\n\r\n  const noteToShow = showAll\r\n    ? note\r\n    : note.filter(nota => nota.important)\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Note</h1>\r\n      <Notification message={errorMessage} />\r\n      <button className='waves-effect waves-light btn-small' onClick={() => setShowAll(!showAll)}>\r\n        show {showAll ? 'important' : 'all'}\r\n      </button>\r\n      <ul className='collection'>\r\n        {noteToShow.map(nota =>\r\n          <Note\r\n            key={nota.id}\r\n            nota={nota}\r\n            toggleImportance={() => toggleImportanceOf(nota.id)}\r\n            deleteNote={() => deleteNoteOf(nota.id, nota.tema)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <div className=\"row\">\r\n        <form onSubmit={addNote} className='col s12'>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">chat</i>\r\n              <input\r\n                id=\"icon_prefix\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                name='tema'\r\n                onChange={handleNoteChange}\r\n                value={newNote}\r\n                required\r\n              />\r\n              <label htmlFor=\"icon_prefix\">Aggiungi nota...</label>\r\n            </div>\r\n            <div className=\"col s3\">\r\n              <div style={{ marginTop: '16px' }}>\r\n                <i className=\"material-icons prefix\" style={{ marginRight: '5px' }}>date_range</i>\r\n                <DatePicker\r\n                  autoComplete='off'\r\n                  selected={newDay}\r\n                  onChange={handleDayChange}\r\n                  id=\"icon_prefix\"\r\n                  className=\"validate\"\r\n                  dateFormat='dd/MM/yyyy'\r\n                  style={{ marginLeft: '5px' }}\r\n                  minDate={moment().toDate()}\r\n                  required\r\n                  placeholderText='Data...'\r\n                />\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"col s3\">\r\n              <TextField\r\n                onChange={handleOurChange}\r\n                value={newOur}\r\n                required\r\n                id=\"time\"\r\n                label=\"Ora...\"\r\n                type=\"time\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className='btn-floating  waves-effect waves-light green' type='submit'><i className=\"material-icons\">add_to_photos</i></button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}