{"version":3,"sources":["components/Note.js","services/note.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Note","nota","toggleImportance","deleteNota","day","moment","giorno","format","className","style","borderBottom","tema","color","ora","onClick","important","marginLeft","baseUrl","exportedObject","getAll","axios","get","create","newObj","post","update","id","put","elimina","delete","Notification","message","backgroundColor","fontSize","borderStyle","borderRadius","padding","marginBottom","App","props","useState","note","setNote","newNote","setNewNote","newDay","setNewDay","newOur","setNewOur","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","then","res","data","sort","a","b","console","log","length","noteToShow","filter","map","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","window","confirm","onSubmit","e","preventDefault","noteObj","Date","toISOString","Math","random","lenght","concat","type","name","onChange","target","value","required","htmlFor","marginTop","marginRight","autoComplete","selected","date","minDate","toDate","dateFormat","TextField","label","InputLabelProps","shrink","inputProps","step","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31c7747d.chunk.js","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nconst Note = ({ nota, toggleImportance, deleteNota }) => {\r\n    const day = moment(nota.giorno).format('DD/MM/yyyy')\r\n    //const label = nota.important ? 'Definisci  non importante' : 'Definisci importante'\r\n    return (\r\n        <li className='collection-item' style={{ borderBottom: '1px solid #dadada' }}>\r\n            <span className='title'>{nota.tema} il giorno <span style={{color:'red'}}>{day}</span> alle ore <span style={{color:'orange'}}>{nota.ora}</span></span>\r\n            <span className=\"secondary-content\">\r\n                <button className='waves-effect waves-light btn-small ' onClick={toggleImportance}>{nota.important ? 'not important' : <i className=\"material-icons\">grade</i>}</button>\r\n                <button onClick={deleteNota} style={{ marginLeft: '5px' }} className='btn-floating btn-small waves-effect waves-light red'> <i className=\"material-icons\">delete</i></button>\r\n            </span>\r\n\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Note;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\n// Ricezione dati metodo GET\r\nconst getAll =() => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\n//Invio dati metodo POST\r\nconst create = newObj => {\r\n    return axios.post(baseUrl, newObj)\r\n}\r\n\r\n//Metodo Modifica PUT\r\nconst update = (id, newObj) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObj)\r\n}\r\n\r\n//Metodo elimina delete\r\nconst elimina = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst exportedObject = {\r\n    getAll,\r\n    create,\r\n    update,\r\n    elimina\r\n}\r\nexport default exportedObject\r\n","import React from 'react';\r\n//import './css/Notification.css'\r\nconst Notification = ({ message }) => {\r\n    const notificationStyle = {\r\n        color: 'red',\r\n        backgroundColor: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div style={notificationStyle}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/note'\nimport DatePicker from \"react-datepicker\";\nimport { TextField } from '@material-ui/core';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\nimport Notification from './components/Notification';\n\nconst App = (props) => {\n  const [note, setNote] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [newDay, setNewDay] = useState('')\n  const [newOur, setNewOur] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('Inserisci qui error...')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(res => {\n        //console.log(res.data.sort((a, b) => b.giorno > a.giorno ? -1 : 1))\n        setNote(res.data.sort((a, b) => b.giorno > a.giorno ? -1 : 1))\n      })\n  }, [])\n  console.log('render', note.length, 'note')\n  const addNote = (e) => {\n    e.preventDefault()\n    const noteObj = {\n      tema: newNote,\n      giorno: newDay,\n      ora: newOur,\n      data: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: note.lenght + 1\n    }\n    noteService\n      .create(noteObj)\n      .then(res => {\n        setNote(note.concat(res.data).sort((a, b) => new Date(a.giorno) - new Date(b.giorno)))\n        setNewNote('')\n        setNewDay('')\n        setNewOur('')\n      })\n  }\n  const toggleImportanceOf = id => {\n    const nota = note.find(n => n.id === id)\n    const changedNote = { ...nota, important: !nota.important }\n    noteService.update(id, changedNote).then(res => {\n      setNote(note.map(nota => nota.id !== id ? nota : res.data))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `La nota '${nota.tema}' Ã¨ stata rimossa dalla lista`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      },5000)\n\n    })\n  }\n  const deleteNotaOf = (id, tema) => {\n    const r = window.confirm(`Sicuro di voler eliminare la nota ${tema} ? `)\n    if (r === false) {\n      return\n    } else {\n      note.filter(n => n.id === id)\n      noteService\n        .elimina(id)\n        .then(() => {\n          setNote(note.filter(nota => nota.id !== id))\n        })\n    }\n  }\n\n  const handleNoteChange = (e) => {\n    console.log(e.target.value)\n    setNewNote(e.target.value)\n\n  }\n  const handleDayChange = (date) => {\n    setNewDay(date)\n  }\n\n  const handleOurChange = (e) => {\n    console.log(e.target.value)\n    setNewOur(e.target.value)\n  }\n\n  const noteToShow = showAll\n    ? note\n    : note.filter(nota => nota.important)\n  return (\n    <div className=\"container\">\n      <h1>Note</h1>\n      <Notification message={errorMessage}/>\n      <button className='waves-effect waves-light btn-small' onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all'}\n      </button>\n      <ul className='collection'>\n        {noteToShow.map(nota =>\n          <Note\n            key={nota.id}\n            nota={nota}\n            toggleImportance={() => toggleImportanceOf(nota.id)}\n            deleteNota={() => deleteNotaOf(nota.id, nota.tema)}\n          />\n        )}\n      </ul>\n      <div className=\"row\">\n        <form onSubmit={addNote} className='col s12'>\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <i className=\"material-icons prefix\">chat</i>\n              <input\n                id=\"icon_prefix\"\n                type=\"text\"\n                className=\"validate\"\n                name='tema'\n                onChange={handleNoteChange}\n                value={newNote}\n                required\n              />\n              <label htmlFor=\"icon_prefix\">Aggiungi nota...</label>\n            </div>\n            <div className=\"col s3\">\n              <div style={{ marginTop: '16px' }}>\n                <i className=\"material-icons prefix\" style={{ marginRight: '5px' }}>date_range</i>\n                <DatePicker\n                  autoComplete='off'\n                  selected={newDay}\n                  onChange={handleDayChange}\n                  className=\"validate\"\n                  id=\"icon_prefix\"\n                  minDate={moment().toDate()}\n                  dateFormat='dd/MM/yyyy'\n                  required\n                />\n              </div>\n\n            </div>\n            <div className=\"col s3\">\n              <TextField\n                id=\"time\"\n                onChange={handleOurChange}\n                value={newOur}\n                label=\"Ora...\"\n                type=\"time\"\n                required\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 300, // 5 min\n                }}\n              />\n            </div>\n          </div>\n          <button className='btn-floating  waves-effect waves-light green' type='submit'><i className=\"material-icons\">add_to_photos</i></button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}